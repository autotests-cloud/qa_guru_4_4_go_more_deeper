buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'io.qameta.allure'

ext {
    allureVersion = '2.13.8'
    junitVersion = '5.8.0-M1'
    junitPlatforVersion = '1.8.0-M1'
}

allure {
    autoconfigure = true
    version = allureVersion
}

dependencies {
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:${junitPlatforVersion}"
    implementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    implementation("io.qameta.allure:allure-junit5:${allureVersion}") {
        exclude group: "org.junit.platform"
        exclude group: "org.junit.jupiter"
    }

    testImplementation "com.codeborne:selenide:5.18.0"
    testImplementation "com.codeborne:pdf-test:1.5.1"
    testImplementation "com.codeborne:xls-test:1.4.3"
    testImplementation "net.lingala.zip4j:zip4j:1.3.2"
    testImplementation "com.github.javafaker:javafaker:1.0.2"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "org.assertj:assertj-core:3.19.0"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:2.10.3"


    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

//    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
//    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.0"
//    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}